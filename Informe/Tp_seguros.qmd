```{r}
# Librerias
library(dplyr)
library(readxl)
library(ggplot2)
library(lubridate)
library(moments)
library(EnvStats)
library(actuar)
library(MASS)
library(ExtDist)
```


```{r}
# Carga de los datos
datos <- read_excel("../Datos/Trabajo Final 2024 Base de Datos .xlsx")
cer <- read_excel("../Datos/CER.xlsx")

datos$Fecha <- lubridate::as_date(datos$Fecha)
cer$Fecha <- lubridate::as_date(cer$Fecha)

datos$Fecha[1] + lubridate::days(45)
cer$Fecha[354] + days(45)
```


```{r}
limite = cer$CER[cer$Fecha == (datos$Fecha[3431] + days(45))] 


cer$CER[cer$Fecha == (datos$Fecha[1:3] + days(45))]
```

```{r}
# Ajuste por el indice CER a 45 dias
indice = numeric(nrow(datos))
for (i in 1:nrow(datos)) {
  indice[i] <- cer$CER[cer$Fecha == (datos$Fecha[i] + days(45))]
}

datos$inflacion <- limite/indice

datos$Cuantia_ajust <- datos$Cuantía * limite/indice
```

## Analisis descriptivo

```{r}
cuantia_total <- sum(datos$Cuantia_ajust)
```


```{r}
datos |> 
  mutate(mes = factor(month(Fecha))) |> 
  ggplot() +
  aes(x = mes, y = Cuantia_ajust/1000000) +
  geom_bar(stat = "identity") +
  theme_bw() +
  labs(y = "Cuantia", 
       caption = "* los valores estan expresados en millones de pesos (ej:150 son 150 millones)",
       x = "Mes")
```
```{r}
datos |> 
  mutate(mes = factor(month(Fecha))) |>
  group_by(mes) |> 
  summarize(siniestros = n(),
            total_cuantia = sum(Cuantia_ajust)) |> 
  ggplot() +
  aes(x = mes, y = siniestros) +
  geom_bar(stat = "identity") +
  theme_bw()
```
```{r}
# Medidas resumenes de las cuantias
media_datos = mean(datos$Cuantia_ajust) # Promedio
var_datos = var(datos$Cuantia_ajust) # Desvío estandar
asimetria_datos = skewness(datos$Cuantia_ajust) # Coeficiente de asimetría

# Medidas resumenes de los siniestros
siniestros_datos <- datos |> 
  mutate(mes = factor(month(Fecha))) |>
  group_by(mes) |> 
  summarize(siniestros = n(),
            total_cuantia = sum(Cuantia_ajust))
media_siniestros = mean(siniestros_datos$siniestros)
var_siniestros = var(siniestros_datos$siniestros)
```

## Propuesta 1

- Distribución de los siniestros: Binomial negativa
- Distribución de la cuantías: Log-Normal
- Recargos de seguridad: 2% y 5%


```{r}
registro = data.frame(
  anio = c(2021, 2022, 2023),
  polizas = c(24752, 25348, 25615),
  siniestros = c(3023, 3581, 3431)
)

registro <- registro |> 
  mutate(lambda = siniestros/polizas)

kableExtra::kable(registro,format = "pipe")
```

```{r}
n_polizas <- 25615 
k <- 10000 # 10000 simulaciones
media_lambda = mean(registro$lambda)
h <- ((media_lambda)^2)/(media_lambda*1.1 - media_lambda) # Suponiendo que la variancia es un 10% más que la media
p <- h/(media_lambda + h)


siniestros <- numeric(k)
for (i in 1:k) {
  
  # Obtenemos el numero total de siniestros para toda la cartera
  siniestros[i] <- sum(rnbinom(n = n_polizas, prob = p, size = h))
  }
```

```{r}
densidad_bn <- dnbinom(x = 0:10 ,prob = p, size = h)

ggplot() +
  aes(x = 0:4, y = densidad_bn[1:5]) +
  geom_bar(stat = "identity", width = 0.2) + 
  theme_bw()
```



```{r}
ggplot() +
  aes(x = siniestros) +
  geom_histogram(bins = 40) +
  theme_bw()
```

```{r}
mom1 <- media_datos
mom2 <- var_datos + mom1^2

r <- mom2/(mom1^2)

sigma_est <- sqrt(log(r))
mu_est <- log(mom1) - (1/2)*log(r)

media_siniestros_simulados1 <- mean(siniestros)
var_siniestros_simulados1 <- var(siniestros)

cuantia_total_simulada <- numeric(length(siniestros))
esperanzas_simuladas <- numeric(length(siniestros))
variancias_simuladas <- numeric(length(siniestros))
contador <- 0

for(i in siniestros){
  contador <- contador + 1
  pos <- rlnorm(n = i, meanlog = mu_est, sdlog = sigma_est)
  esperanzas_simuladas[contador] <- mean(pos)
  variancias_simuladas[contador] <- var(pos)
  cuantia_total_simulada[contador] <- sum(pos)
}

media_ej1 <- mean(esperanzas_simuladas) # Esperanza del ejercicio
var_ej1 <- mean(variancias_simuladas) # Variancia del ejercicio

media_cuantia_total <- media_ej1 * media_siniestros_simulados1
```

```{r}
datos |> 
  ggplot() +
  aes(x = Cuantia_ajust) +
  geom_histogram(aes(y = after_stat(density)), bins = 80) +
  stat_function(fun = dlnorm, args = list(meanlog = mu_est, sdlog = sigma_est), 
                color = "blue", size = 1) +
  theme_bw()
```

## Propuesta 2

- Distribución de los siniestros: Binomial negativa
- Distribución de la cuantías: Gamma
- Recargos de seguridad: 2% y 5%

```{r}
alpha = (media_datos^2)/(var_datos)
beta = var_datos/media_datos

cuantia_total_simulada2 <- numeric(length(siniestros))
esperanzas_simuladas2 <- numeric(length(siniestros))
variancias_simuladas2 <- numeric(length(siniestros))
contador <- 0

for(i in siniestros){
  contador <- contador + 1
  pos <- rgamma(n = i, shape = alpha, scale = beta)
  esperanzas_simuladas2[contador] <- mean(pos)
  variancias_simuladas2[contador] <- var(pos)
  cuantia_total_simulada2[contador] <- sum(pos)
}

media_ej2 <- mean(esperanzas_simuladas2) # Esperanza del ejercicio
var_ej2 <- mean(variancias_simuladas2) # Variancia del ejercicio

media_cuantia_total2 <- media_ej2 * media_siniestros_simulados1
```

```{r}
datos |> 
  ggplot() +
  aes(x = Cuantia_ajust) +
  geom_histogram(aes(y = after_stat(density)), bins = 80) +
  stat_function(fun = dgamma, args = list(shape = alpha, scale = beta), 
                color = "blue", size = 1) +
    stat_function(fun = dlnorm, args = list(meanlog = mu_est, sdlog = sigma_est), 
                color = "green", size = 1) +
  theme_bw()
```

## Propuesta 3

- Distribución de los siniestros: Poisson
- Distribución de la cuantías: Log-Normal
- Recargos de seguridad: 2% y 5%

```{r}
n_polizas <- 25615 
k <- 10000 # 10000 simulaciones
media_lambda = mean(registro$lambda)

siniestros_poisson <- numeric(k)
for (i in 1:k) {
  
  # Obtenemos el numero total de siniestros para toda la cartera
  siniestros_poisson[i] <- sum(rpois(n = n_polizas, lambda = media_lambda))
  }
```

```{r}
densidad_poisson <- dpois(x = 0:10 ,lambda = media_lambda)

ggplot() +
  aes(x = 0:4, y = densidad_poisson[1:5]) +
  geom_bar(stat = "identity", width = 0.2) + 
  theme_bw()
```

```{r}
ggplot() +
  aes(x = siniestros_poisson) +
  geom_histogram(bins = 40) +
  theme_bw()
```


```{r}
mom1 <- media_datos
mom2 <- var_datos + mom1^2

r <- mom2/(mom1^2)

sigma_est <- sqrt(log(r))
mu_est <- log(mom1) - (1/2)*log(r)

media_siniestros_simulados3 <- mean(siniestros_poisson)
var_siniestros_simulados3 <- var(siniestros_poisson)

cuantia_total_simulada3 <- numeric(length(siniestros_poisson))
esperanzas_simuladas3 <- numeric(length(siniestros_poisson))
variancias_simuladas3 <- numeric(length(siniestros_poisson))
contador <- 0

for(i in siniestros_poisson){
  contador <- contador + 1
  pos <- rlnorm(n = i, meanlog = mu_est, sdlog = sigma_est)
  esperanzas_simuladas3[contador] <- mean(pos)
  variancias_simuladas3[contador] <- var(pos)
  cuantia_total_simulada3[contador] <- sum(pos)
}

media_ej3 <- mean(esperanzas_simuladas3) # Esperanza del ejercicio
var_ej3 <- mean(variancias_simuladas3) # Variancia del ejercicio

media_cuantia_total3 <- media_ej3 * media_siniestros_simulados3

```



```{r}
ggplot() +
  aes(x = cuantia_total_simulada) +
  geom_density()
```


